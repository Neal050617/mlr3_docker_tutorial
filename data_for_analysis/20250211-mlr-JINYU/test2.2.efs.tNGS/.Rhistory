current_labels = F_list # 明确传递标签信息
)
significant <- perform_statistical_test(tbl, focus_var = focus_on) |>
mutate(label = case_when(
p_value < 0.001 ~ "***",
p_value < 0.01 ~ "**",
p_value < 0.05 ~ "*"
))
return(list(tbl, significant))
})
combined_table <- generate_combined_table(TB, focus_var = focus_on, status_map = F_list, group_map = t_list)
significant_features <- map_df(TB, ~ .x[[2]])
# 将结果存储到列表中
all_combined_tables[[i]] <- combined_table %>%
mutate(group = c_list[as.character(sData[[list_data2[[analysis_id]]]][i])])
all_significant_features[[i]] <- significant_features %>%
mutate(group = c_list[as.character(sData[[list_data2[[analysis_id]]]][i])])
PP <- create_feature_plot(
plot_data = sData$data[[i]] %>% inner_join(plot_list),
sig_features = significant_features,
title = paste0(c_list[as.character(sData[[list_data2[[analysis_id]]]][i])], "性患者普通和重症肺炎检出统计图"),
x_label = "病原体",
y_label = "检出率(%)",
color_labels = c("轻症", "重症")
)
showtext_auto() # 自动启用中文支持
ggsave(paste0(
"./", ifelse(analysis_id < 10, paste0("0", analysis_id), analysis_id),
".", c_list[as.character(sData[[list_data2[[analysis_id]]]][i])],
list_data[[1]], ".pdf"
), PP, width = 10, height = 8)
}
addWorksheet(wb, "06.data")
writeData(wb, "06.data", Data)
addWorksheet(wb, "06.sign")
writeData(wb, "06.sign", bind_rows(all_significant_features))
addWorksheet(wb, "06.combined")
writeData(wb, "06.combined", bind_rows(all_combined_tables))
# 7. 单双叶肺叶数和重症肺炎的病原体检出结果 #########################################################
analysis_id <- 7
feature_colnames <- tNGS_colnames
focus_on <- "feature13"
Data <- prepare_feature_data(
data = data14, # 明确指定数据
focus_on = focus_on, # 分析特征
focus_on2 = list_data2[[analysis_id]], # 分析特征
focus_on3 = focus_on,
focus_on4 = list_data2[[analysis_id]],
feature_colnames = feature_colnames # 明确传递列名信息
) |> filter(is.na(!!sym(list_data2[[analysis_id]])) == FALSE)
sData <- Data %>%
group_by(!!sym(list_data2[[analysis_id]])) %>%
nest()
c_list <- c("0" = "单侧", "1" = "双侧")
F_list <- c("0" = "普通肺炎", "1" = "重症肺炎")
t_list <- c("0" = "无","1" = "有")
all_combined_tables <- list()
all_significant_features <- list()
for(i in 1:nrow(sData)) { # i <- 1
TB <- lapply(feature_colnames$new_name, function(x) { # x <- feature_colnames$new_name[11]
tbl <- create_contingency_table(data14,focus_on, x,
focus_on2 = list_data2[[analysis_id]],
focus_on2_subset = as.numeric(as.character(sData[[list_data2[[analysis_id]]]][i])),
current_labels = F_list # 明确传递标签信息
)
significant <- perform_statistical_test(tbl, focus_var = focus_on) |>
mutate(label = case_when(
p_value < 0.001 ~ "***",
p_value < 0.01 ~ "**",
p_value < 0.05 ~ "*"
))
return(list(tbl, significant))
})
combined_table <- generate_combined_table(TB, focus_var = focus_on, status_map = F_list, group_map = t_list)
significant_features <- map_df(TB, ~ .x[[2]])
# 将结果存储到列表中
all_combined_tables[[i]] <- combined_table %>%
mutate(group = c_list[as.character(sData[[list_data2[[analysis_id]]]][i])])
all_significant_features[[i]] <- significant_features %>%
mutate(group = c_list[as.character(sData[[list_data2[[analysis_id]]]][i])])
PP <- create_feature_plot(
plot_data = sData$data[[i]] %>% inner_join(plot_list),
sig_features = significant_features,
title = paste0(c_list[as.character(sData[[list_data2[[analysis_id]]]][i])], "性患者普通和重症肺炎检出统计图"),
x_label = "病原体",
y_label = "检出率(%)",
color_labels = c("轻症", "重症")
)
showtext_auto() # 自动启用中文支持
ggsave(paste0(
"./", ifelse(analysis_id < 10, paste0("0", analysis_id), analysis_id),
".", c_list[as.character(sData[[list_data2[[analysis_id]]]][i])],
list_data[[1]], ".pdf"
), PP, width = 10, height = 8)
}
addWorksheet(wb, "07.data")
writeData(wb, "07.data", Data)
addWorksheet(wb, "07.sign")
writeData(wb, "07.sign", bind_rows(all_significant_features))
addWorksheet(wb, "07.combined")
writeData(wb, "07.combined", bind_rows(all_combined_tables))
# 8. 不同肺叶数和重症肺炎的病原体检出结果 #########################################################
analysis_id <- 8
feature_colnames <- tNGS_colnames
focus_on <- "feature13"
data14 <- data14 %>%
mutate(feature27 = case_when(
feature27 == 1 ~ 0,
feature27 >= 2 ~ 1,
TRUE ~ NA_real_
))
Data <- prepare_feature_data(
data = data14, # 明确指定数据
focus_on = focus_on, # 分析特征
focus_on2 = list_data2[[analysis_id]], # 分析特征
focus_on3 = focus_on,
focus_on4 = list_data2[[analysis_id]],
feature_colnames = feature_colnames # 明确传递列名信息
) |> filter(is.na(!!sym(list_data2[[analysis_id]])) == FALSE)
sData <- Data %>%
group_by(!!sym(list_data2[[analysis_id]])) %>%
nest()
c_list <- c("0" = "单个", "1" = "多个")
F_list <- c("0" = "普通肺炎", "1" = "重症肺炎")
t_list <- c("0" = "无","1" = "有")
all_combined_tables <- list()
all_significant_features <- list()
for(i in 1:nrow(sData)) { # i <- 1
TB <- lapply(feature_colnames$new_name, function(x) { # x <- feature_colnames$new_name[11]
tbl <- create_contingency_table(data14,focus_on, x,
focus_on2 = list_data2[[analysis_id]],
focus_on2_subset = as.numeric(as.character(sData[[list_data2[[analysis_id]]]][i])),
current_labels = F_list # 明确传递标签信息
)
significant <- perform_statistical_test(tbl, focus_var = focus_on) |>
mutate(label = case_when(
p_value < 0.001 ~ "***",
p_value < 0.01 ~ "**",
p_value < 0.05 ~ "*"
))
return(list(tbl, significant))
})
combined_table <- generate_combined_table(TB, focus_var = focus_on, status_map = F_list, group_map = t_list)
significant_features <- map_df(TB, ~ .x[[2]])
# 将结果存储到列表中
all_combined_tables[[i]] <- combined_table %>%
mutate(group = c_list[as.character(sData[[list_data2[[analysis_id]]]][i])])
all_significant_features[[i]] <- significant_features %>%
mutate(group = c_list[as.character(sData[[list_data2[[analysis_id]]]][i])])
PP <- create_feature_plot(
plot_data = sData$data[[i]] %>% inner_join(plot_list),
sig_features = significant_features,
title = paste0(c_list[as.character(sData[[list_data2[[analysis_id]]]][i])], "性患者普通和重症肺炎检出统计图"),
x_label = "病原体",
y_label = "检出率(%)",
color_labels = c("轻症", "重症")
)
showtext_auto() # 自动启用中文支持
ggsave(paste0(
"./", ifelse(analysis_id < 10, paste0("0", analysis_id), analysis_id),
".", c_list[as.character(sData[[list_data2[[analysis_id]]]][i])],
list_data[[1]], ".pdf"
), PP, width = 10, height = 8)
}
addWorksheet(wb, "08.data")
writeData(wb, "08.data", Data)
addWorksheet(wb, "08.sign")
writeData(wb, "08.sign", bind_rows(all_significant_features))
addWorksheet(wb, "08.combined")
writeData(wb, "08.combined", bind_rows(all_combined_tables))
# 9. 肺炎支原体耐药和非耐药患者中普通和重症肺炎的病原体检出结果 #########################################################
analysis_id <- 9
feature_colnames <- tNGS_colnames
focus_on <- "feature13"
data14 <- data14 %>%
mutate(feature17 = case_when(
feature17_1 == 1 & feature17_2 == 0 ~ 0, # 耐药
feature17_1 == 1 & feature17_2 == 1 ~ 1, # 非耐药
TRUE ~ NA_real_ # 其他情况设为NA
))
list_data2[[analysis_id]] <- "feature17"
Data <- prepare_feature_data(
data = data14, # 明确指定数据
focus_on = focus_on, # 分析特征
focus_on2 = list_data2[[analysis_id]], # 分析特征
focus_on3 = focus_on,
focus_on4 = list_data2[[analysis_id]],
feature_colnames = feature_colnames # 明确传递列名信息
) |> filter(is.na(!!sym(list_data2[[analysis_id]])) == FALSE)
sData <- Data %>%
group_by(!!sym(list_data2[[analysis_id]])) %>%
nest()
c_list <- c("0" = "支原体非耐药", "1" = "支原体耐药")
F_list <- c("0" = "普通肺炎", "1" = "重症肺炎")
t_list <- c("0" = "无","1" = "有")
all_combined_tables <- list()
all_significant_features <- list()
for(i in 1:nrow(sData)) { # i <- 1
TB <- lapply(feature_colnames$new_name, function(x) { # x <- feature_colnames$new_name[11]
tbl <- create_contingency_table(data14,focus_on, x,
focus_on2 = list_data2[[analysis_id]],
focus_on2_subset = as.numeric(as.character(sData[[list_data2[[analysis_id]]]][i])),
current_labels = F_list # 明确传递标签信息
)
significant <- perform_statistical_test(tbl, focus_var = focus_on) |>
mutate(label = case_when(
p_value < 0.001 ~ "***",
p_value < 0.01 ~ "**",
p_value < 0.05 ~ "*"
))
return(list(tbl, significant))
})
combined_table <- generate_combined_table(TB, focus_var = focus_on, status_map = F_list, group_map = t_list)
significant_features <- map_df(TB, ~ .x[[2]])
# 将结果存储到列表中
all_combined_tables[[i]] <- combined_table %>%
mutate(group = c_list[as.character(sData[[list_data2[[analysis_id]]]][i])])
all_significant_features[[i]] <- significant_features %>%
mutate(group = c_list[as.character(sData[[list_data2[[analysis_id]]]][i])])
PP <- create_feature_plot(
plot_data = sData$data[[i]] %>% inner_join(plot_list),
sig_features = significant_features,
title = paste0(c_list[as.character(sData[[list_data2[[analysis_id]]]][i])], "性患者普通和重症肺炎检出统计图"),
x_label = "病原体",
y_label = "检出率(%)",
color_labels = c("轻症", "重症")
)
showtext_auto() # 自动启用中文支持
ggsave(paste0(
"./", ifelse(analysis_id < 10, paste0("0", analysis_id), analysis_id),
".", c_list[as.character(sData[[list_data2[[analysis_id]]]][i])],
list_data[[1]], ".pdf"
), PP, width = 10, height = 8)
}
addWorksheet(wb, "09.sign")
writeData(wb, "09.sign", bind_rows(all_significant_features))
addWorksheet(wb, "09.data")
writeData(wb, "09.data", Data)
addWorksheet(wb, "09.combined")
writeData(wb, "09.combined", bind_rows(all_combined_tables))
# 10. 不同病原体和重症肺炎的病原体检出结果 #########################################################
analysis_id <- 10
feature_colnames <- tNGS_colnames
focus_on <- "feature13"
Data <- prepare_feature_data(
data = data14 %>% filter(!!sym(list_data2[[analysis_id]]) != 3),
focus_on = focus_on, # 分析特征
focus_on2 = list_data2[[analysis_id]], # 分析特征
focus_on3 = list_data2[[analysis_id]],
focus_on4 = focus_on,
feature_colnames = feature_colnames # 明确传递列名信息
) #|> select(-level_3,-level_3_per)
sData <- Data %>%
group_by(!!sym(focus_on)) %>%
nest()
c_list <- c("0" = "痰", "1" = "灌洗液", "2" = "咽拭子")  # , "3" = "气管分泌液"
F_list <- c("0" = "普通肺炎", "1" = "重症肺炎")
t_list <- c("0" = "无", "1" = "有")
all_combined_tables <- list()
all_significant_features <- list()
for(i in 1:nrow(sData)) { # i <- 2
# 使用修改后的函数
TB <- lapply(feature_colnames$new_name, function(x) { # x <- feature_colnames$new_name[11]
tbl <- create_contingency_table2(data = data14 %>% filter(!!sym(list_data2[[analysis_id]]) != 3),
focus_on, x,
focus_on2 = list_data2[[analysis_id]],
focus_on2_subset = as.numeric(as.character(sData[[focus_on]][i])),
current_labels = t_list # 明确传递标签信息
)
significant <- perform_statistical_test(tbl,focus_var = list_data2[[analysis_id]]) |>
mutate(label = case_when(
p_value < 0.001 ~ "***",
p_value < 0.01 ~ "**",
p_value < 0.05 ~ "*"
))
return(list(tbl, significant))
})
combined_table <- generate_combined_table(TB,
focus_var = list_data2[[analysis_id]],
status_map = t_list,
group_map = c_list)
significant_features <- map_df(TB, ~ .x[[2]])
# 将结果存储到列表中
all_combined_tables[[i]] <- combined_table %>%
mutate(group = F_list[as.character(sData[[focus_on]][i])])
all_significant_features[[i]] <- significant_features %>%
mutate(group = F_list[as.character(sData[[focus_on]][i])])
PP <- create_feature_plot2(
plot_data = sData$data[[i]] %>% inner_join(plot_list),
sig_features = significant_features,
title = paste0(c_list[as.character(sData[[focus_on]][i])], "肺炎病原体分布统计图"),
x_label = "病原体",
y_label = "检出率(%)",
color_labels = c_list
)
showtext_auto() # 自动启用中文支持
ggsave(paste0(
"./", ifelse(analysis_id < 10, paste0("0", analysis_id), analysis_id), ".",
paste(c_list, collapse = "-"), ".",
F_list[as.character(sData[[focus_on]][i])], "病原体检出结果.pdf"
), PP, width = 10, height = 8)
}
addWorksheet(wb, "10.data")
writeData(wb, "10.data", Data)
addWorksheet(wb, "10.sign")
writeData(wb, "10.sign", bind_rows(all_significant_features))
addWorksheet(wb, "10.combined")
writeData(wb, "10.combined", bind_rows(all_combined_tables))
# 11. 不同季节在不同肺炎类型中的病原体检出结果 #########################################################
analysis_id <- 11
feature_colnames <- tNGS_colnames
focus_on <- "feature13"
Data <- prepare_feature_data(
data = data14,
focus_on = focus_on, # 分析特征
focus_on2 = list_data2[[analysis_id]], # 分析特征
focus_on3 = list_data2[[analysis_id]],
focus_on4 = focus_on,
feature_colnames = feature_colnames # 明确传递列名信息
)
sData <- Data %>%
group_by(!!sym(focus_on)) %>%
nest()
c_list <- c("1" = "春", "2" = "夏", "3" = "秋", "4" = "冬")
F_list <- c("0" = "普通肺炎", "1" = "重症肺炎")
t_list <- c("0" = "无", "1" = "有")
all_combined_tables <- list()
all_significant_features <- list()
for(i in 1:nrow(sData)) { # i <- 1
# 使用修改后的函数
TB <- lapply(feature_colnames$new_name, function(x) { # x <- feature_colnames$new_name[11]
tbl <- create_contingency_table2(data14,focus_on, x,
focus_on2 = list_data2[[analysis_id]],
focus_on2_subset = as.numeric(as.character(sData[[focus_on]][i])),
current_labels = t_list # 明确传递标签信息
)
significant <- perform_statistical_test(tbl,focus_var = list_data2[[analysis_id]]) |>
mutate(label = case_when(
p_value < 0.001 ~ "***",
p_value < 0.01 ~ "**",
p_value < 0.05 ~ "*"
))
return(list(tbl, significant))
})
combined_table <- generate_combined_table(TB,
focus_var = list_data2[[analysis_id]],
status_map = t_list,
group_map = c_list)
significant_features <- map_df(TB, ~ .x[[2]])
# 将结果存储到列表中
all_combined_tables[[i]] <- combined_table %>%
mutate(group = F_list[as.character(sData[[focus_on]][i])])
all_significant_features[[i]] <- significant_features %>%
mutate(group = F_list[as.character(sData[[focus_on]][i])])
PP <- create_feature_plot2(
plot_data = sData$data[[i]] %>% inner_join(plot_list),
sig_features = significant_features,
title = paste0(c_list[as.character(sData[[focus_on]][i])], "肺炎病原体分布统计图"),
x_label = "病原体",
y_label = "检出率(%)",
color_labels = c_list
)
showtext_auto() # 自动启用中文支持
ggsave(paste0(
"./", ifelse(analysis_id < 10, paste0("0", analysis_id), analysis_id), ".",
paste(c_list, collapse = "-"), ".",
F_list[as.character(sData[[focus_on]][i])], "病原体检出结果.pdf"
), PP, width = 10, height = 8)
}
addWorksheet(wb, "11.data")
writeData(wb, "11.data", Data)
addWorksheet(wb, "11.sign")
writeData(wb, "11.sign", bind_rows(all_significant_features))
addWorksheet(wb, "11.combined")
writeData(wb, "11.combined", bind_rows(all_combined_tables))
# 12.不同免疫状态在不同肺炎类型中病原体的检出情况 #########################################################
analysis_id <- 12
feature_colnames <- tNGS_colnames
focus_on <- "feature13"
Data <- prepare_feature_data(
data = data14,
focus_on = focus_on, # 分析特征
focus_on2 = list_data2[[analysis_id]], # 分析特征
focus_on3 = list_data2[[analysis_id]],
focus_on4 = focus_on,
feature_colnames = feature_colnames # 明确传递列名信息
) %>% select(-level_NA,-level_NA_per)
sData <- Data %>%
group_by(!!sym(focus_on)) %>%
nest()
c_list <- c("0" = "免疫低下", "1" = "免疫正常")
F_list <- c("0" = "普通肺炎", "1" = "重症肺炎")
t_list <- c("0" = "无", "1" = "有")
all_combined_tables <- list()
all_significant_features <- list()
for(i in 1:nrow(sData)) { # i <- 1
# 使用修改后的函数
TB <- lapply(feature_colnames$new_name, function(x) { # x <- feature_colnames$new_name[11]
tbl <- create_contingency_table2(data14,focus_on, x,
focus_on2 = list_data2[[analysis_id]],
focus_on2_subset = as.numeric(as.character(sData[[focus_on]][i])),
current_labels = t_list # 明确传递标签信息
)
significant <- perform_statistical_test(tbl,focus_var = list_data2[[analysis_id]]) |>
mutate(label = case_when(
p_value < 0.001 ~ "***",
p_value < 0.01 ~ "**",
p_value < 0.05 ~ "*"
))
return(list(tbl, significant))
})
combined_table <- generate_combined_table(TB,
focus_var = list_data2[[analysis_id]],
status_map = t_list,
group_map = c_list)
significant_features <- map_df(TB, ~ .x[[2]])
# 将结果存储到列表中
all_combined_tables[[i]] <- combined_table %>%
mutate(group = F_list[as.character(sData[[focus_on]][i])])
all_significant_features[[i]] <- significant_features %>%
mutate(group = F_list[as.character(sData[[focus_on]][i])])
PP <- create_feature_plot2(
plot_data = sData$data[[i]] %>% inner_join(plot_list),
sig_features = significant_features,
title = paste0(c_list[as.character(sData[[focus_on]][i])], "肺炎病原体分布统计图"),
x_label = "病原体",
y_label = "检出率(%)",
color_labels = c_list
)
showtext_auto() # 自动启用中文支持
ggsave(paste0(
"./", ifelse(analysis_id < 10, paste0("0", analysis_id), analysis_id), ".",
paste(c_list, collapse = "-"), ".",
F_list[as.character(sData[[focus_on]][i])], "病原体检出结果.pdf"
), PP, width = 10, height = 8)
}
addWorksheet(wb, "12.data")
writeData(wb, "12.data", Data)
addWorksheet(wb, "12.sign")
writeData(wb, "12.sign", bind_rows(all_significant_features))
addWorksheet(wb, "12.combined")
writeData(wb, "12.combined", bind_rows(all_combined_tables))
# 13.影像学累计不同肺叶数量在不同肺炎类型中病原体的检出情况 #########################################################
analysis_id <- 13
feature_colnames <- tNGS_colnames
focus_on <- "feature13"
Data <- prepare_feature_data(
data = data14,
focus_on = focus_on, # 分析特征
focus_on2 = list_data2[[analysis_id]], # 分析特征
focus_on3 = list_data2[[analysis_id]],
focus_on4 = focus_on,
feature_colnames = feature_colnames # 明确传递列名信息
) %>% select(-level_NA,-level_NA_per)
sData <- Data %>%
group_by(!!sym(focus_on)) %>%
nest()
c_list <- c("0" = "单个", "1" = "多个")
F_list <- c("0" = "普通肺炎", "1" = "重症肺炎")
t_list <- c("0" = "无", "1" = "有")
all_combined_tables <- list()
all_significant_features <- list()
for(i in 1:nrow(sData)) { # i <- 1
# 使用修改后的函数
TB <- lapply(feature_colnames$new_name, function(x) { # x <- feature_colnames$new_name[11]
tbl <- create_contingency_table2(data14,focus_on, x,
focus_on2 = list_data2[[analysis_id]],
focus_on2_subset = as.numeric(as.character(sData[[focus_on]][i])),
current_labels = t_list # 明确传递标签信息
)
significant <- perform_statistical_test(tbl,focus_var = list_data2[[analysis_id]]) |>
mutate(label = case_when(
p_value < 0.001 ~ "***",
p_value < 0.01 ~ "**",
p_value < 0.05 ~ "*"
))
return(list(tbl, significant))
})
combined_table <- generate_combined_table(TB,
focus_var = list_data2[[analysis_id]],
status_map = t_list,
group_map = c_list)
significant_features <- map_df(TB, ~ .x[[2]])
# 将结果存储到列表中
all_combined_tables[[i]] <- combined_table %>%
mutate(group = F_list[as.character(sData[[focus_on]][i])])
all_significant_features[[i]] <- significant_features %>%
mutate(group = F_list[as.character(sData[[focus_on]][i])])
PP <- create_feature_plot2(
plot_data = sData$data[[i]] %>% inner_join(plot_list),
sig_features = significant_features,
title = paste0(c_list[as.character(sData[[focus_on]][i])], "肺炎病原体分布统计图"),
x_label = "病原体",
y_label = "检出率(%)",
color_labels = c_list
)
showtext_auto() # 自动启用中文支持
ggsave(paste0(
"./", ifelse(analysis_id < 10, paste0("0", analysis_id), analysis_id), ".",
paste(c_list, collapse = "-"), ".",
F_list[as.character(sData[[focus_on]][i])], "病原体检出结果.pdf"
), PP, width = 10, height = 8)
}
addWorksheet(wb, "13.data")
writeData(wb, "13.data", Data)
addWorksheet(wb, "13.sign")
writeData(wb, "13.sign", bind_rows(all_significant_features))
addWorksheet(wb, "13.combined")
writeData(wb, "13.combined", bind_rows(all_combined_tables))
######### 保存工作簿 #########################################################
saveWorkbook(wb, "model_report.xlsx", overwrite = TRUE)
gc()
